<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSharp on وبلاگ آرمان حسن پور</title><link>/categories/csharp/</link><description>Recent content in CSharp on وبلاگ آرمان حسن پور</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>تمام حقوق این سایت متعلق به آرمان حسن پور می باشد و کپی با ذکر منبع بلامانع است.</copyright><lastBuildDate>Fri, 07 Feb 2020 18:22:06 +0330</lastBuildDate><atom:link href="/categories/csharp/index.xml" rel="self" type="application/rss+xml"/><item><title>استفاده از CLR در SQL Server</title><link>/posts/sql-server-clr/</link><pubDate>Fri, 07 Feb 2020 18:22:06 +0330</pubDate><guid>/posts/sql-server-clr/</guid><description>SQL Server به منظور ارتقا در مدل برنامه‌نویسی پایگاه داده خود از نسخه 2005 تکنولوژی SQL CLR را معرفی نمود. این تکنولوژی همچنین با اسامی CLR Integrated ،CLR Enabled و CLR Embedded نیز شناخته می‌شود. هدف آن این است که شما بتوانید اشیاء پایگاه داده‌ای از قبیل Stored Procedure ،Function ،Trigger را با استفاده از CSharp و یا VB ایجاد کرده و آن را در SQL Server مورد استفاده قرار دهید.</description></item><item><title>کار با UUID در CSharp</title><link>/posts/uuid-guid-csharp/</link><pubDate>Thu, 06 Feb 2020 11:20:50 +0330</pubDate><guid>/posts/uuid-guid-csharp/</guid><description>برای ایجاد و استفاده از UUID در زبان برنامه‌نویسی CSharp از ساختار Guid موجود در کتابخانه System استفاده می‌شود:
1public static Guid NewGuid() 2{ 3 return Guid.NewGuid(); 4} guid ایجاد شده در این روش از نوع و نسخه چهارم UUID است و به صورت تصادفی تولید می‌شود. برای تولید guid به صورت ترتیبی می‌توان از کد زیر استفاده نمود:
1public static Guid NewSequentialGuid() 2{ 3 var uid = Guid.NewGuid().ToByteArray(); 4 var binDate = BitConverter.</description></item><item><title>کار با آدرس‌های IP در CSharp</title><link>/posts/ip-csharp/</link><pubDate>Sat, 04 Jan 2020 15:28:10 +0330</pubDate><guid>/posts/ip-csharp/</guid><description>برای کار با آدرس‌های IPv4 و IPv6 در CSharp از کتابخانه System.Net و کلاس IPAddress استفاده می‌شود. به منظور اعتبارسنجی آدرس‌های IP می‌توان از کد زیر استفاده نمود:
1public static bool IsValidIp(string address) 2{ 3 return IPAddress.TryParse(address, out _); 4} به منظور تشخیص نسخه‌ی آدرس‌های IP می‌توان از کد زیر استفاده نمود:
1public static IpVersion GetIpVersion(string address) 2{ 3 if (IPAddress.TryParse(address, out var ipAddress)) 4 { 5 if(ipAddress.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork) 6 { 7 return IpVersion.</description></item></channel></rss>